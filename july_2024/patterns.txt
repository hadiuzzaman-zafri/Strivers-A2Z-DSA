//------------------------ Start of Pattern 1 --------------------

* * * * * 
* * * * * 
* * * * * 
* * * * * 
* * * * * 



void pattern( int n ) {
    for (int i = 0; i < n; i++) {
        for(int i = 0; i < n; i++) {
            cout << "*" << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 1 ---------------------


//------------------------ Start of Pattern 2 --------------------

Your asked pattern: 
* 
* * 
* * * 
* * * * 
* * * * * 


void pattern( int n ) {
    for (int i = 0; i < n; i++) {
        for(int j = 0; j <= i; j++) {
            cout << "*" << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 2 ---------------------

//------------------------ Start of Pattern 3 --------------------

Your asked pattern: 
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 

void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            cout << j << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 3 ---------------------

//------------------------ Start of Pattern 4 --------------------

Your asked pattern: 
1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 

void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            cout << i << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 4 ---------------------

//------------------------ Start of Pattern 5 --------------------

Your asked pattern: 
* * * * * 
* * * * 
* * * 
* * 
* 


void pattern( int n ) {
    for (int i = n; i > 0; i--) {
        for(int j = 1; j <= i; j++) {
            cout << "*" << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 5 ---------------------

//------------------------ Start of Pattern 6 --------------------

Your asked pattern: 
1 2 3 4 5 
1 2 3 4 
1 2 3 
1 2 
1 

void pattern( int n ) {
    for (int i = n; i > 0; i--) {
        for(int j = 1; j <= i; j++) {
            cout << j << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 6 ---------------------

//------------------------ Start of Pattern 7 --------------------

Your asked pattern: 
        * 
      * * * 
    * * * * * 
  * * * * * * * 
* * * * * * * * * 

void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        } 
        for( int j = 1; j <= i; j++) {
            cout << "*" << " ";
        }
        for(int j = 1; j < i; j++ ) {
            cout << "*" << " ";
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 7 ---------------------

//------------------------ Start of Pattern 8 --------------------

Your asked pattern: 
* * * * * * * * * 
  * * * * * * * 
    * * * * * 
      * * * 
        * 

void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j < i; j++) {
            cout << " " << " ";
        } 
        for(int j = i; j <= n; j++) {
            cout << "*" << " ";
        }
        for(int k = n; k > i; k--) {
            cout << "*" << " ";
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 8 ---------------------

//------------------------ Start of Pattern 9 --------------------

Your asked pattern: 
        * 
      * * * 
    * * * * * 
  * * * * * * * 
* * * * * * * * * 
* * * * * * * * * 
  * * * * * * * 
    * * * * * 
      * * * 
        * 


void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        } 
        for( int j = 1; j <= i; j++) {
            cout << "*" << " ";
        }
        for(int j = 1; j < i; j++ ) {
            cout << "*" << " ";
        }
        cout << endl;
    }
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j < i; j++) {
            cout << " " << " ";
        } 
        for(int j = i; j <= n; j++) {
            cout << "*" << " ";
        }
        for(int k = n; k > i; k--) {
            cout << "*" << " ";
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 9 ---------------------

//------------------------ Start of Pattern 10 --------------------

Your asked pattern: 
* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
* 

void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            cout << "*" << " ";
        } 
        cout << endl;
    }
    for (int i = 1; i < n; i++) {
        for(int j = i; j < n; j++) {
            cout << "*" << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 10 ---------------------

//------------------------ Start of Pattern 11 --------------------

Your asked pattern: 
1 
0 1 
1 0 1 
0 1 0 1 
1 0 1 0 1 


void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            if( (i+j) % 2 == 0 ) {
                cout << "1" << " ";
            }else{
                cout << "0" << " ";
            }
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 11 ---------------------

//------------------------ Start of Pattern 12 --------------------

Your asked pattern: 
1                 1 
1 2             2 1 
1 2 3         3 2 1 
1 2 3 4     4 3 2 1 
1 2 3 4 5 5 4 3 2 1 


void pattern( int n ) {
    for (int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            cout << j << " ";
        } 
        for( int j = i; j < n; j++) {
            cout << " " << " ";
        }
        for( int j = i ; j < n; j++) {
            cout << " " << " ";
        }
        for( int j = i; j >= 1; j--) {
            cout << j << " ";
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 12 ---------------------


//------------------------ Start of Pattern 13 --------------------


void pattern( int n ) {
    int number = 1;
    for (int i = 1; i <= n; i++) {
        
        for(int j = 1; j <= i; j++) {
            cout << number << " ";
            number++;
        } 
        
        cout << endl;
    }
}

//----------------------- End of Pattern 13 ---------------------

//------------------------ Start of Pattern 14 --------------------

Your asked pattern: 
A 
A B 
A B C 
A B C D 
A B C D E 


void pattern( int n ) {
    for (int i = 1; i <= n; i++) {  
        for(int j = 0; j < i; j++) {
            char letter = 'A' + j;  
            // storing character and adding number will increate the character value
            // the variable letter declared as a character thats why it's gives output as a character
            // if it ( int letter = 'A' will give output as 65 )
            cout << letter << " ";
        } 
        
        cout << endl;
    }
}

//----------------------- End of Pattern 14 ---------------------

//------------------------ Start of Pattern 15 --------------------

Your asked pattern: 
A B C D E 
A B C D 
A B C 
A B 
A

void pattern( int n ) {
    
    for (int i = 0; i < n; i++) {  
        char letter = 'A';
        for(int j = i; j < n; j++) {  
                    // storing character and adding number will increate the character value
                    // the variable letter declared as a character thats why it's gives output as a character
                    // if it ( int letter = 'A' will give output as 65 )
            cout << letter << " ";
            letter++;
                    // in each i the letter comes with A, and after each j A increase by 1
        }     
        cout << endl;
    }
}

//----------------------- End of Pattern 15 ---------------------

//------------------------ Start of Pattern 16 --------------------

Your asked pattern: 
A 
B B 
C C C 
D D D D 
E E E E E 

void pattern( int n ) {
    
    for (int i = 0; i < n; i++) {  
        char letter = 'A';
        for(int j = 0; j <= i; j++) {
            char finalLetter = letter + i;
            cout << finalLetter << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 16 ---------------------

//------------------------ Start of Pattern 17 --------------------

Your asked pattern: 
        A 
      A B A 
    A B C B A 
  A B C D C B A 
A B C D E D C B A 

void pattern( int n ) {
    
    for (int i = 1; i <= n; i++) {  
        char letter = 'A';
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        } 
        for(int j = 0; j < i; j++) {
            char finalLetter = letter + j;
            cout << finalLetter << " ";
        }
        for(int j = i - 1; j >= 1; j--) {
            char newLetter = letter + j - 1;
            cout << newLetter << " ";
            newLetter--;
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 17 ---------------------

//------------------------ Start of Pattern 18 --------------------

Your asked pattern: 
E 
D E 
C D E 
B C D E 
A B C D E 

void pattern( int n ) {
    
    for (int i = 1; i <= n; i++) {  
        char letter = 'A';
        char finalLetter = letter + n - i;
        for(int j = 1; j <= i; j++) {   
            cout << finalLetter << " ";
            finalLetter++;
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 18 ---------------------

//------------------------ Start of Pattern 19 --------------------

Your asked pattern: 
* * * * * * * * * * 
* * * *     * * * * 
* * *         * * * 
* *             * * 
*                 * 
*                 * 
* *             * * 
* * *         * * * 
* * * *     * * * * 
* * * * * * * * * * 


void pattern( int n ) {
    
    for (int i = 1; i <= n; i++) {  
        for(int j = i; j <= n; j++) {   
            cout << "*" << " ";
        } 
        for(int j = 1; j < i; j++) {
            cout << " " << " ";
        }
        for(int j = 1; j < i; j++) {
            cout << " " << " ";
        }
        for(int j = i; j <=n; j++) {
            cout << "*" << " ";
        }
        cout << endl;
    }
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            cout << "*" << " ";
        }
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        }
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        }
        for(int j = 1; j <= i; j++) {
            cout << "*" << " ";
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 19 ---------------------

//------------------------ Start of Pattern 20 --------------------

Your asked pattern: 
*                 * 
* *             * * 
* * *         * * * 
* * * *     * * * * 
* * * * * * * * * * 
* * * *     * * * * 
* * *         * * * 
* *             * * 
*                 * 

void pattern( int n ) {
    
    for (int i = 1; i <= n; i++) {  
        for(int j = 1; j <= i; j++) {   
            cout << "*" << " ";
        } 
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        }
        for(int j = i; j < n; j++) {
            cout << " " << " ";
        }
        for(int j = 1; j <=i; j++) {
            cout << "*" << " ";
        }
        cout << endl;
    }
    for(int i = 1; i <= n; i++) {
        for(int j = i; j < n; j++) {
            cout << "*" << " ";
        }
        for(int j = 1; j <= i; j++) {
            cout << " " << " ";
        }
        for(int j = 1; j <= i; j++) {
            cout << " " << " ";
        }
        for(int j = i; j < n; j++) {
            cout << "*" << " ";
        }
        cout << endl;
    }
}

//----------------------- End of Pattern 20 ---------------------

//------------------------ Start of Pattern 21 --------------------

Your asked pattern: 
* * * * * 
*       * 
*       * 
*       * 
* * * * * 

void pattern( int n ) {
    
    for (int i = 1; i <= n; i++) {  
        for(int j = 1; j <= n; j++) {   
            if( i == 1 || i == n) {
                cout << "*" << " ";
            }else if(j == 1 || j == n) {
                cout << "*" << " ";
            }else{
                cout << " " << " ";
            }
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 21 ---------------------

//------------------------ Start of Pattern 22 --------------------

Your asked pattern: 
5 5 5 5 5 5 5 5 5 
5 4 4 4 4 4 4 4 5 
5 4 3 3 3 3 3 4 5 
5 4 3 2 2 2 3 4 5 
5 4 3 2 1 2 3 4 5 
5 4 3 2 2 2 3 4 5 
5 4 3 3 3 3 3 4 5 
5 4 4 4 4 4 4 4 5 
5 5 5 5 5 5 5 5 5 

void pattern( int n ) {
    
    for (int i = 0; i < 2*n - 1; i++) {  
        for(int j = 0; j < 2*n - 1; j++) { 
            int top = i;
            int left = j;
            int right = ( (n * 2) - 2 ) - j;
            int bottom = ( (n * 2) - 2 ) - i;
            int number = (n - min(min(top, left), min(bottom, right))) ;
            cout << number << " ";
        } 
        cout << endl;
    }
}

//----------------------- End of Pattern 22 ---------------------

